
v2.02  Beat's 2.1
v2.03  new FLAG_FORCE_MASKED in Loops: one pixel at a time, trim 15
v2.04  DAC correction table
v2.05  bug fix for FLAG_FORCE_MASKED
v2.06  load trim bits
v2.07  setLoopTriggerDelay [us]
v2.10  Daq_FillLevel, bool Loop... true = done, false = interrupt
v2.11  (22.4.2014)
v2.14  (28.4.2014 Simon) SetLoopTriggerDelay [BC]
v2.15  (12.5.2014 Simon) SetTrimValues uint8 instead int8
v2.17  (13.5.2014 Simon) Faster Daq_FillLevel() in TriggerLoops
v2.18  (14.5.2014 Beat)  FW 2.2: fix missing 2 bytes problem (not always)
v2.19  (15.5.2014 Simon) FLAG_FORCE_MASKED is now default, overide with FLAG_FORCE_UNMASKED
v2.20  (16.5.2014 Simon) triggerDelay auto calculation (for modules)
V2.21  (21.5.2014 Simon) Pg_Triggers(uint32_t triggers, uint16_t period [BC])
v2.22  ( 6.6.2014 Beat)  FW 2.3 with 32 bit transfer into RAM

--------------------------------------------------------------------------------

update rpc_calls.cpp with tools:

git clone https://github.com/psi46/pixel-dtb-firmware.git
mv pixel-dtb-firmware/  pixel-dtb-firmware-2-22

cd tools-16MB/rpcgen
generate.sh ~/psi/dtb/pixel-dtb-firmware-2-22/software/dtb_expert/pixel_dtb.h

cd tst222
cp ../tools-16MB/rpcgen/rpc_calls.cpp .

manually update pixel_dtb.h
(compare to pxar/core/rpc/rpc_calls.h)

make

cp ../pixel-dtb-firmware-2-22/FLASH/dtb_v2.22.flash .

> upgrade dtb_v2.22.flash

psi46test for DTB V2.2 (20.6.2014)
USB opened DTB_WS6RT9
DTB DTB_WS6RT9 opened
--- DTB info-------------------------------------
Board id:    80
HW version:  DTB1.2
FW version:  2.2
SW version:  2.21
USB id:      DTB_WS6RT9
MAC address: 40D855118050
Hostname:    pixelDTB080
Comment:     
-------------------------------------------------
PC  hash 333290928
DTB hash 333290928
RPC call hashes of PC and DTB match: 333290928

> rpcinfo
--- DTB RPC info ----------------------------------------
RPC version:     2.0
RPC timestamp:   
Number of calls: 128
Function calls:
    0: uint16_t GetRpcVersion();
    1: int32_t GetRpcCallId(string&);
    2: void GetRpcTimestamp(stringR&);
    3: int32_t GetRpcCallCount();
    4: bool GetRpcCallName(int32_t, stringR&);
    5: uint32_t GetRpcCallHash();
    6: void GetInfo(stringR&);
    7: uint16_t GetBoardId();
    8: void GetHWVersion(stringR&);
    9: uint16_t GetFWVersion();
   10: uint16_t GetSWVersion();
   11: uint16_t UpgradeGetVersion();
   12: uint8_t UpgradeStart(uint16_t);
   13: uint8_t UpgradeData(string&);
   14: uint8_t UpgradeError();
   15: void UpgradeErrorMsg(stringR&);
   16: void UpgradeExec(uint16_t);
   17: void Init();
   18: void Welcome();
   19: void SetLed(uint8_t);
   20: void cDelay(uint16_t);
   21: void uDelay(uint16_t);
   22: void SetClockSource(uint8_t);
   23: bool IsClockPresent();
   24: void SetClock(uint8_t);
   25: void SetClockStretch(uint8_t, uint16_t, uint16_t);
   26: void Sig_SetMode(uint8_t, uint8_t);
   27: void Sig_SetPRBS(uint8_t, uint8_t);
   28: void Sig_SetDelay(uint8_t, uint16_t, int8_t);
   29: void Sig_SetLevel(uint8_t, uint8_t);
   30: void Sig_SetOffset(uint8_t);
   31: void Sig_SetLVDS();
   32: void Sig_SetLCDS();
   33: void SignalProbeD1(uint8_t);
   34: void SignalProbeD2(uint8_t);
   35: void SignalProbeA1(uint8_t);
   36: void SignalProbeA2(uint8_t);
   37: void SignalProbeADC(uint8_t, uint8_t);
   38: void Pon();
   39: void Poff();
   40: void _SetVD(uint16_t);
   41: void _SetVA(uint16_t);
   42: void _SetID(uint16_t);
   43: void _SetIA(uint16_t);
   44: uint16_t _GetVD();
   45: uint16_t _GetVA();
   46: uint16_t _GetID();
   47: uint16_t _GetIA();
   48: void HVon();
   49: void HVoff();
   50: void ResetOn();
   51: void ResetOff();
   52: uint8_t GetStatus();
   53: void SetRocAddress(uint8_t);
   54: void Pg_SetCmd(uint16_t, uint16_t);
   55: void Pg_SetCmdAll(vector<uint16_t>&);
   56: void Pg_SetSum(uint16_t);
   57: void Pg_Stop();
   58: void Pg_Single();
   59: void Pg_Trigger();
   60: void Pg_Triggers(uint32_t, uint16_t);
   61: void Pg_Loop(uint16_t);
   62: uint32_t Daq_Open(uint32_t, uint8_t);
   63: void Daq_Close(uint8_t);
   64: void Daq_Start(uint8_t);
   65: void Daq_Stop(uint8_t);
   66: uint32_t Daq_GetSize(uint8_t);
   67: uint8_t Daq_FillLevel(uint8_t);
   68: uint8_t Daq_FillLevel();
   69: uint8_t Daq_Read(HWvectorR&, uint32_t, uint8_t);
   70: uint8_t Daq_Read(HWvectorR&, uint32_t, uint32_t&, uint8_t);
   71: void Daq_Select_ADC(uint16_t, uint8_t, uint8_t, uint8_t);
   72: void Daq_Select_Deser160(uint8_t);
   73: void Daq_Select_Deser400();
   74: void Daq_Deser400_Reset(uint8_t);
   75: void Daq_Select_Datagenerator(uint16_t);
   76: void Daq_DeselectAll();
   77: void roc_I2cAddr(uint8_t);
   78: void roc_ClrCal();
   79: void roc_SetDAC(uint8_t, uint8_t);
   80: void roc_Pix(uint8_t, uint8_t, uint8_t);
   81: void roc_Pix_Trim(uint8_t, uint8_t, uint8_t);
   82: void roc_Pix_Mask(uint8_t, uint8_t);
   83: void roc_Pix_Cal(uint8_t, uint8_t, bool);
   84: void roc_Col_Enable(uint8_t, bool);
   85: void roc_Col_Mask(uint8_t);
   86: void roc_Chip_Mask();
   87: bool TBM_Present();
   88: void tbm_Enable(bool);
   89: void tbm_Addr(uint8_t, uint8_t);
   90: void mod_Addr(uint8_t);
   91: void tbm_Set(uint8_t, uint8_t);
   92: bool tbm_Get(uint8_t, uint8_t&);
   93: bool tbm_GetRaw(uint8_t, uint32_t&);
   94: bool GetPixelAddressInverted();
   95: void SetPixelAddressInverted(bool);
   96: int32_t CountReadouts(int32_t);
   97: int32_t CountReadouts(int32_t, int32_t);
   98: int32_t CountReadouts(int32_t, int32_t, int32_t);
   99: int32_t PH(int32_t, int32_t, int32_t, int16_t);
  100: int32_t PixelThreshold(int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, bool, bool);
  101: bool test_pixel_address(int32_t, int32_t);
  102: int8_t CalibratePixel(int16_t, int16_t, int16_t, int16_t&, int32_t&);
  103: int8_t CalibrateDacScan(int16_t, int16_t, int16_t, int16_t, int16_t, int16_t, vectorR<int16_t>&, vectorR<int32_t>&);
  104: int8_t CalibrateDacDacScan(int16_t, int16_t, int16_t, int16_t, int16_t, int16_t, int16_t, int16_t, int16_t, vectorR<int16_t>&, vectorR<int32_t>&);
  105: int16_t TrimChip(vector<int16_t>&);
  106: int16_t CalibrateMap(int16_t, vectorR<int16_t>&, vectorR<int32_t>&, vectorR<uint32_t>&);
  107: int16_t TriggerRow(int16_t, int16_t, vector<int16_t>&, int16_t);
  108: bool TestColPixel(uint8_t, uint8_t, bool, vectorR<uint8_t>&);
  109: void Ethernet_Send(string&);
  110: uint32_t Ethernet_RecvPackets();
  111: void LoopInterruptReset();
  112: void SetLoopTriggerDelay(uint16_t);
  113: bool SetI2CAddresses(vector<uint8_t>&);
  114: bool SetTrimValues(uint8_t, vector<uint8_t>&);
  115: bool LoopMultiRocAllPixelsCalibrate(vector<uint8_t>&, uint16_t, uint16_t);
  116: bool LoopMultiRocOnePixelCalibrate(vector<uint8_t>&, uint8_t, uint8_t, uint16_t, uint16_t);
  117: bool LoopSingleRocAllPixelsCalibrate(uint8_t, uint16_t, uint16_t);
  118: bool LoopSingleRocOnePixelCalibrate(uint8_t, uint8_t, uint8_t, uint16_t, uint16_t);
  119: bool LoopMultiRocAllPixelsDacScan(vector<uint8_t>&, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t);
  120: bool LoopMultiRocOnePixelDacScan(vector<uint8_t>&, uint8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t);
  121: bool LoopSingleRocAllPixelsDacScan(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t);
  122: bool LoopSingleRocOnePixelDacScan(uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t);
  123: bool LoopMultiRocAllPixelsDacDacScan(vector<uint8_t>&, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t);
  124: bool LoopMultiRocOnePixelDacDacScan(vector<uint8_t>&, uint8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t);
  125: bool LoopSingleRocAllPixelsDacDacScan(uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t);
  126: bool LoopSingleRocOnePixelDacDacScan(uint8_t, uint8_t, uint8_t, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t);
  127: void VectorTest(vector<uint16_t>&, vectorR<uint16_t>&);

--------------------------------------------------------------------------------
11.8.2014
git commit -m "cmd  takedata writes data file, tdscan for X-ray threshold method, scanvb for bias voltage scan with iseg"

--------------------------------------------------------------------------------
 rsync -vrtpE * /media/Dell\ USB\ Portable\ HDD/psi/dtb/Psi46testDesy
